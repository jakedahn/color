@mixin linearGradient($top, $bottom){
  background: $top; /* Old browsers */
  background: -moz-linear-gradient(top,  $top 0%, $bottom 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(top,  $top 0%,$bottom 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(top,  $top 0%,$bottom 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(top,  $top 0%,$bottom 100%); /* IE10+ */
  background: linear-gradient(to bottom,  $top 0%,$bottom 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}
@mixin roundedCorners($size){
  -webkit-border-radius: $size + px;
      -moz-border-radius: $size + px;
      border-radius: $size + px;
}

@mixin opacity($opacity) {
opacity: $opacity;
$opacity-ie: $opacity * 100;
filter: alpha(opacity=$opacity-ie);
}

@mixin rem($property, $values...) {
  $n: length($values);
  $i: 1;

  $pxlist: ();
  $remlist: ();

  @while $i <= $n {
      $itemVal: (nth($values, $i));
      @if $itemVal != "auto"{
          $pxlist: append($pxlist, $itemVal + px);
          $remlist: append($remlist, ($itemVal / 10) + rem);
      }@else{
          $pxlist: append($pxlist, auto);
          $remlist: append($remlist, auto);
      }


      $i: $i + 1;
  }

  #{$property}: $pxlist;
  #{$property}: $remlist;
}

@mixin image-2x($image, $width, $height) {
@media (min--moz-device-pixel-ratio: 1.3),
       (-o-min-device-pixel-ratio: 2.6/2),
       (-webkit-min-device-pixel-ratio: 1.3),
       (min-device-pixel-ratio: 1.3),
       (min-resolution: 1.3dppx) {
  background-image: url($image);
  background-size: $width + px $height + px;
  background-size: $width / 10 + rem $height / 10 + rem;
}
}

@mixin backface-visibility($visibility: hidden) {
backface-visibility: $visibility;
-webkit-backface-visibility: $visibility;
-moz-backface-visibility: $visibility;
-ms-backface-visibility: $visibility;
-o-backface-visibility: $visibility;
}

@mixin transition($time){
transition: $time;
-webkit-transition: $time;
-moz-transition: $time;
-o-transition: $time;
}

@mixin transform($transformation) {
transform: $transformation;
-webkit-transform: $transformation;
-moz-transform: $transformation;
-ms-transform: $transformation;
-o-transform: $transformation;
}

@mixin transform-style($style){
 transform-style: $style;
-moz-transform-style: $style;
-o-transform-style: $style;
-ms-transform-style: $style;
-webkit-transform-style: $style;
}

@mixin transform($transforms) {
-webkit-transform: $transforms;
-moz-transform: $transforms;
-ms-transform: $transforms;
transform: $transforms;
}

@mixin rotate ($deg) {
@include transform(rotate(#{$deg}deg));
}

@mixin scale($scale) {
@include transform(scale($scale));
}

@mixin translate ($x, $y) {
@include transform(translate($x, $y));
}

@mixin skew ($x, $y) {
@include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin transform-origin ($origin) {
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
-ms-transform-origin: $origin;
transform-origin: $origin;
}

// Creates a background that appears to be split diagonally through the middle by two colors.

// THIS REPLACES COMPASS'S BUILT IN GRADIENT INCLUDE 
// COMPASS IS NOT FULLY CROSS-BROWSER
// This is built off of the format from http://www.colorzilla.com/gradient-editor/

@mixin diagonal-gradient($color1, $color2, $color1-hover, $color2-hover){
  ///* Old browsers - Fallback to flat color */
  background: $color1;
  ///* FF3.6+ */
  background: -moz-linear-gradient(45deg, $color1 0%, $color1 50%, $color2 51%, $color2 100%);
  ///* Chrome,Safari4+ */
  background: -webkit-gradient(linear, left bottom, right top, color-stop(0%,$color1), color-stop(50%,$color1), color-stop(51%,$color2), color-stop(100%,$color2));
  ///* Chrome10+,Safari5.1+ */
  background: -webkit-linear-gradient(45deg, $color1 0%,$color1 50%,$color2 51%,$color2 100%);
  ///* Opera 11.10+ */
  background: -o-linear-gradient(45deg, $color1 0%,$color1 50%,$color2 51%,$color2 100%);
  ///* IE10+ */
  background: -ms-linear-gradient(45deg, $color1 0%,$color1 50%,$color2 51%,$color2 100%);
  ///* W3C */
  background: linear-gradient(45deg, $color1 0%,$color1 50%,$color2 51%,$color2 100%);
  ///* IE6-9 fallback on horizontal gradient */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$color1', endColorstr='$color2',GradientType=1 );

  &:hover, &:active{
    ///* Old browsers - Fallback to flat color */
    background: $color1-hover;
    ///* FF3.6+ */
    background: -moz-linear-gradient(45deg, $color1-hover 0%, $color1-hover 50%, $color2-hover 51%, $color2-hover 100%);
    ///* Chrome,Safari4+ */
    background: -webkit-gradient(linear, left bottom, right top, color-stop(0%,$color1-hover), color-stop(50%,$color1-hover), color-stop(51%,$color2-hover), color-stop(100%,$color2-hover));
    ///* Chrome10+,Safari5.1+ */
    background: -webkit-linear-gradient(45deg, $color1-hover 0%,$color1-hover 50%,$color2-hover 51%,$color2-hover 100%);
    ///* Opera 11.10+ */
    background: -o-linear-gradient(45deg, $color1-hover 0%,$color1-hover 50%,$color2-hover 51%,$color2-hover 100%);
    ///* IE10+ */
    background: -ms-linear-gradient(45deg, $color1-hover 0%,$color1-hover 50%,$color2-hover 51%,$color2-hover 100%);
    ///* W3C */
    background: linear-gradient(45deg, $color1-hover 0%,$color1-hover 50%,$color2-hover 51%,$color2-hover 100%);
    ///* IE6-9 fallback on horizontal gradient */
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$color1-hover', endColorstr='$color2-hover',GradientType=1 );
  }
}
@mixin linear-gradient($left, $right){
// top, #1e5799 0%,#2989d8 55%,#7db9e8 100

  background: $left; /* Old browsers */
  background: -moz-linear-gradient(left,  $left 0%, $right 80%,  $right 100%); /* FF3.6+ */
  background: -webkit-gradient(linear, left left, left right, color-stop(0%,$left), color-stop(100%,$right)); /* Chrome,Safari4+ */
  background: -webkit-linear-gradient(left,  $left 0%, $right 80%, $right 100%); /* Chrome10+,Safari5.1+ */
  background: -o-linear-gradient(left,  $left 0%, $right 80%, $right 100%); /* Opera 11.10+ */
  background: -ms-linear-gradient(left,  $left 0%, $right 80%, $right 100%); /* IE10+ */
  background: linear-gradient(to right,  $left 0%, $right 80%, $right 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
}


@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
@if $inset {
  -webkit-box-shadow:inset $top $left $blur $color;
  -moz-box-shadow:inset $top $left $blur $color;
  box-shadow:inset $top $left $blur $color;
} @else {
  -webkit-box-shadow: $top $left $blur $color;
  -moz-box-shadow: $top $left $blur $color;
  box-shadow: $top $left $blur $color;
}
}


@mixin transition($args...) {
-webkit-transition: $args;
-moz-transition: $args;
-ms-transition: $args;
-o-transition: $args;
transition: $args;
}


@mixin optional-at-root($sel) {
@at-root #{if(not &, $sel, selector-append(&, $sel))} {
  @content;
}
}

@mixin placeholder {
@include optional-at-root('::-webkit-input-placeholder') {
  @content;
}

@include optional-at-root(':-moz-placeholder') {
  @content;
}

@include optional-at-root('::-moz-placeholder') {
  @content;
}

@include optional-at-root(':-ms-input-placeholder') {
  @content;
}
}
